openapi: "3.0.0"
info:
  version: 1.0.0
  title: Eqviewer
  license:
    name: MIT
paths:
  /codes:
    get:
      summary: List all source_code_pairs
      operationId: listSourceCodePairs
      tags:
        - SourceCodePairs
      responses:
        '200':
          description: A paged array of SourceCodePairs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceCodePairs"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /codes/{codesId}:
    get:
      summary: Get one source_code_pairs
      operationId: getSourceCodePair
      parameters:
        - in: path
          name: codesId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A SourceCodePair
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceCodePair"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a source_code_pairs
      operationId: updateSourceCodePairs
      parameters:
        - in: path
          name: codesId
          required: true
          schema:
            type: integer
      requestBody:
        description: A JSON object containing code pair
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SourceCodePair"
      responses:
        200:
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceCodePair"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /code/{codeID}:
    get:
      summary: get source code content
      operationId: getSourceCode
      parameters:
        - in: path
          name: codeID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A paged array of products
          content:
            text/plain:
              schema:
                type: string
  /unionfind:
    get:
      summary: get unionfind
      operationId: getUnionFind
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnionFind"
  /write:
    get:
      summary: Write all source_code_pairs
      operationId: writeSourceCodePairs
      responses:
        '200':
          description: A paged array of SourceCodePairs
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Confilevel:
      type: string
      enum:
        - SUSPICIOUS
        - RELIABLE
        - UNRELIABLE
    ResultType:
      type: string
      enum:
        - SAME
        - EQUAL
        - INEQUAL
        - UNCERTAIN
    SourceCode:
      type: object
      required:
        - path
        - id
      properties:
        path:
          type: string
        id:
          type: integer
    SourceCodePair:
      type: object
      required:
        - code1
        - code2
        - result
        - level
        - id
      properties:
        code1:
          $ref: "#/components/schemas/SourceCode"
        code2:
          $ref: "#/components/schemas/SourceCode"
        result:
          $ref: "#/components/schemas/ResultType"
        level:
          $ref: "#/components/schemas/Confilevel"
        id:
          type: integer
    SourceCodePairs:
      type: array
      items:
        $ref: "#/components/schemas/SourceCodePair"
    UnionFind:
      type: object
      required:
        - parent
        - count
      properties:
        parent:
          type: array
          items:
            type: integer
        count:
          type: integer
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string